name: Release Linux

on:
  release:
    types: [created]

jobs:
  release:
    name: Upload Linux Binary
    runs-on: ubuntu-20.04
    steps:

      # ==== OS Specific Dependencies ====
      - name: Install dependencies
        run: |
          # curl -Lo sdcc.tar.bz2 https://github.com/gbdk-2020/gbdk-2020-sdcc/releases/download/sdcc-12539-official/sdcc-snapshot-amd64-unknown-linux2.5-20210711-12539.tar.bz2
          # Use patched sms/gg z80 build:
          curl -Lo sdcc.tar.bz2 https://github.com/gbdk-2020/gbdk-2020-sdcc/releases/download/sdcc-12539-patched/sdcc-amd64-linux2.5-20210711-12539--sms-gg-patched.tar.bz2
          bunzip2 sdcc.tar.bz2
          tar xvf sdcc.tar

      # ==== Pre-Build ====
      - name: Check out
        uses: actions/checkout@v2
        with:
          path: gbdk-2020
          submodules: false
          
      - name: Set environment variables
        shell: bash
        run: |
          echo "BUILD_PACKAGE_FILENAME=gbdk-2020-Linux-x64.tar.gz" >> $GITHUB_ENV

      # ==== Build ====
      - name: Build
        shell: bash
        run: |
          export SDCCDIR=`pwd`/sdcc
          cd gbdk-2020
          make

      - name: Package
        shell: bash
        run: |
          cd gbdk-2020
          mkdir package
          tar czf package/${{ env.BUILD_PACKAGE_FILENAME }} build/gbdk

      # ==== Upload binary ====
      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: gbdk-2020/package/${{ env.BUILD_PACKAGE_FILENAME }}
          asset_name: Linux-x64.tar.gz
          asset_content_type: application/tar+gzip